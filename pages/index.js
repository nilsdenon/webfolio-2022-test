import { INTERNALS } from "next/dist/server/web/spec-extension/request";
import Head from "next/head";
import Link from "next/link";
import Header from "../src/components/Header";
import styles from "../styles/Home.module.css";

export default function Home({ posts, menus }) {
  const menu = menus.edges[0].node.menuItems.edges;
  console.log(menu);
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />
      <nav>
        {menu.map((item) => {
          return (
            <Link href={item.node.path} key={item.node.id}>
              <a>{item.node.label}</a>
            </Link>
          );
        })}
      </nav>
      <main className={styles.main}>
        <h1 className={styles.title}>Hello</h1>
        <ul>
          {posts.nodes.map((post) => {
            return (
              <li key={post.slug}>
                <Link href={`/works/${post.slug}`}>
                  <a>{post.title}</a>
                </Link>
              </li>
            );
          })}
        </ul>
      </main>
    </div>
  );
}

export async function getStaticProps() {
  const res = await fetch("https://api.nilsdenon.com/graphql", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({
      query: `
        query AllPostsQuery {
          menus(where: {location: PRIMARY}) {
            edges {
              node {
                menuItems {
                  edges {
                    node {
                      id
                      url
                      title
                      path
                      label
                    }
                  }
                }
              }
            }
          }
          posts {
            nodes {
              slug
              content
              title
            }
          }
        }`,
    }),
  });
  const json = await res.json();
  return {
    props: { posts: json.data.posts, menus: json.data.menus },
  };
}
